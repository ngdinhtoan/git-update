#!/bin/bash

# -----------------------------------------------------------------------------
# @author:          Toan Nguyen <toan.nguyen@infocube.ch>
# @date:            19 March 2013 
# @last-modified:   21 March 2013 
#
# This script is use to rebase master and develop branches with remote branches
#
# Install: cp git-update $(git --exec-path)
#
# Usage: git update
#
# -----------------------------------------------------------------------------

# include git sh setup
. "$(git --exec-path)/git-sh-setup"

# check if this command is called in a git repository,
# and the repository is clean
require_work_tree
require_clean_work_tree update "Please commit or stash theme."

# backup current branch name
CURRENT_BRANCH="$(git rev-parse --abbrev-ref HEAD)"

# list of branch which will be updated if no branch inputted
BRANCHES=( master develop )

# get list of branch from arguments if has
if [[ $# -gt 0 ]]; then
    BRANCHES=( $@ )
fi

say "Fetching data from remote origin..."
git fetch -p

for i in $(seq 0 $((${#BRANCHES[@]} - 1))); do
    if [[ -z "$(git branch --list ${BRANCHES[$i]})" ]]; then
        say "Ignore ${BRANCHES[$i]} branch..."
        continue
    fi

    say "Rebasing ${BRANCHES[$i]} branch..."
    git checkout ${BRANCHES[$i]} > /dev/null 2>&1
    git rebase HEAD
    require_clean_work_tree update "Please resolve conflict..."
done

# get back the current branch
git checkout $CURRENT_BRANCH > /dev/null 2>&1
